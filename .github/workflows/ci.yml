# workflow to build and test the project
name: ci

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
defaults:
  run:
    shell: bash

env:
  # PG_VER: 15
  RUST_BACKTRACE: 1
  CARGO_NET_GIT_FETCH_WITH_CLI: "true"
  SCCACHE_CACHE_SIZE: 2G
  RUSTC_WRAPPER: sccache
  # SCCACHE_DIR: ${{ github.workspace }}/.sccache
  SCCACHE_BUCKET: subzero-sccache
  RUST_TOOLCHAIN: stable
  NODE_VERSION: 18
  JAVA_VERSION: 21

  POSTGRES_USER: postgrest_test_authenticator
  POSTGRES_PASSWORD: pass
  POSTGRES_DB: app

  MYSQL_USER: mysql_test_authenticator
  MYSQL_PASSWORD: pass
  MYSQL_DATABASE: public
  MYSQL_ROOT_PASSWORD: pass

  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1

jobs:
  build-test:
    name: build-test
    runs-on: ubuntu-latest
    steps:
      - name: "Set environmental variables"
        run: |
          echo "POSTGRESQL_DB_URI=postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/$POSTGRES_DB" >> $GITHUB_ENV
          echo "MYSQL_DB_URI=mysql://$MYSQL_USER:$MYSQL_PASSWORD@localhost:3306/$MYSQL_DATABASE" >> $GITHUB_ENV

      - uses: actions/checkout@v2
        if: ${{ !env.ACT }}

      - uses: ./.github/actions/rustup
        with:
          version: ${{ env.RUST_TOOLCHAIN }}
      - uses: ./.github/actions/cargo-cache
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'
          cache-dependency-path: 'subzero-java/pom.xml'
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: cargo fmt --all -- --check

      - name: Install Dependencies
        run: |
          sudo apt-key adv --refresh-keys --keyserver keyserver.ubuntu.com
          sudo apt-get update
          sudo apt-get install --yes sqlite3

      - run: cargo build --workspace

      # - name: Build subzero-java
      #   working-directory: subzero-java
      #   run: |
      #     make build_rust
      #     make build

      - name: Build subzero-wasm 
        working-directory: subzero-wasm
        run: |
          if ! command -v wasm-pack &> /dev/null
          then
              echo "wasm-pack could not be found, installing from git"
              cargo install --git https://github.com/rustwasm/wasm-pack
          else
              echo "wasm-pack found"
          fi

          wasm-pack build --release --target web --out-dir=pkg-web
          wasm-pack build --release --target nodejs --out-dir=pkg-node

      # - run: make test
      #   working-directory: subzero-java

      - run: npm ci
        working-directory: subzero-node

      - run: npm run lint
        working-directory: subzero-node

      - name: Bring up db services
        run: docker-compose --file .github/docker-compose.yml --env-file .github/.env up -d

      - run: cargo test
        working-directory: subzero-core

      - run: cargo test sqlite -- --test-threads=1
        working-directory: subzero-rocket

      - run: cargo test postgresql -- --test-threads=1
        working-directory: subzero-rocket

      - run: cargo test mysql -- --test-threads=1
        working-directory: subzero-rocket

      - run: npm test
        working-directory: subzero-node

      - run: sccache --show-stats

      - name: Bring down db services
        run: docker-compose --file .github/docker-compose.yml --env-file .github/.env down
