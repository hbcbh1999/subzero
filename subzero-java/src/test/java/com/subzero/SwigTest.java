package com.subzero;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import com.subzero.swig.*;

// unit test for the lib generated by swig com.subzero.swig.Subzero
public class SwigTest {
    private String schema_json;
    static {
        System.loadLibrary("subzerojni"); // "libsubzerojni.dylib" or "libsubzerojni.so""+
    }
    public SwigTest() {
        this.schema_json = Util.getResourceFileContent("schema.json");
    }

    @Test
    public void testStatement() {
        //public sbz_HTTPRequest(String method, String uri, String body, String[] headers, int headers_count, String[] env, int env_count) 
        String[] headers = new String[] {
                "Accept", "application/json"
        };
        String[] env = new String[] {
                "user_id", "1"
        };
        sbz_HTTPRequest req = new sbz_HTTPRequest(
                "GET",
                "http://example.com/api/projects?select=id,name",
                null,
                headers,
                headers.length,
                env,
                env.length);

        sbz_DbSchema db_schema = Subzero.sbz_db_schema_new("sqlite", this.schema_json, "license_key");
        if (db_schema == null) {
            System.out.println("Failed to create db_schema");
            assert (false);
        }

        // validate it's in demo mode
        assertTrue(db_schema.isDemo());

        sbz_Statement statement = Subzero.sbz_statement_main_new("public", "/api/", db_schema, req, null);
        if (statement == null) {
            System.out.println("Failed to create statement");
            assert (false);
        }

        //String sql = statement.getSql();
        //System.out.println("SQL: " + sql.toString());

        String[] params = statement.getParams();
        //System.out.println("Params: ['" + String.join("','", params) + "']");
        // assert params content
        assertEquals(params.length, 1);
        assertEquals(params[0], "1");

        String[] params_types = statement.getParamsTypes();
        //System.out.println("ParamsTypes: ['" + String.join("','", params_types) + "']");
        // assert params_types content
        assertEquals(params_types.length, 1);
        assertEquals(params_types[0], "text");
    }
    
    @Test
    public void testErrorResponses() {
        try {
            new sbz_HTTPRequest(
                null,
                null,
                null,
                    new String[] {},
                0,
                    new String[] {},
                0);
            
        }
        catch (Exception e) {
            //System.out.println("Exception: " + e.getMessage());
            assertTrue(e.getMessage().contains("method"));
        }
    }


}
