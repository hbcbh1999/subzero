# workflow compile release packages
# example https://github.com/surrealdb/surrealdb/blob/main/.github/workflows/release.yml
name: release
on: workflow_dispatch

defaults:
  run:
    shell: bash
env:
  RUST_BACKTRACE: 1
  CARGO_NET_GIT_FETCH_WITH_CLI: "true"
  SCCACHE_CACHE_SIZE: 2G
  RUSTC_WRAPPER: sccache
  # SCCACHE_DIR: ${{ github.workspace }}/.sccache
  SCCACHE_BUCKET: subzero-sccache
  RUST_TOOLCHAIN: nightly
  NODE_VERSION: 18
  # POSTGRES_USER: postgrest_test_authenticator
  # POSTGRES_PASSWORD: pass
  # POSTGRES_DB: app
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1
  VERSION_TAG: ${{ github.ref_name }}

jobs:
  build-node:
    name: build node package
    runs-on: ubuntu-latest
    steps:
      # check that the workflow was triggered by a tag
      - name: Check that the workflow was triggered by a tag
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo "This workflow was not triggered by a tag. Exiting."
          exit 1
      - uses: actions/checkout@v2

      - uses: ./.github/actions/cargo-cache
      
      # update rust and install wasm-pack
      - uses: ./.github/actions/rustup
        with:
          version: ${{ env.RUST_TOOLCHAIN }}
      - name: Output package versions
        run: cargo version ; rustc --version

      
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Check package version the same as tag
        working-directory: subzero-node
        run: |
          echo "VERSION_TAG: $VERSION_TAG"
          echo "PACKAGE_VERSION: $(node -p "require('./package.json').version")"
          if [ "$VERSION_TAG" != "$(node -p "require('./package.json').version")" ]; then
            echo "Version tag $VERSION_TAG does not match package version $(node -p "require('./package.json').version")"
            exit 1
          fi  

      - name: Build subzero-wasm 
        working-directory: subzero-wasm
        run: |
          if ! command -v wasm-pack &> /dev/null
          then
              echo "wasm-pack could not be found, installing from git"
              cargo install --git https://github.com/rustwasm/wasm-pack
          else
              echo "wasm-pack found"
          fi
          wasm-pack build --release --target web --out-dir=pkg-web
          wasm-pack build --release --target nodejs --out-dir=pkg-node
          wasm-pack build --release --target deno --out-dir=pkg-deno
        # run: |
        #   cargo install -f wasm-bindgen-cli
        #   cargo build --package subzero-wasm --target=wasm32-unknown-unknown --release
        #   wasm-bindgen --out-dir=pkg-web --target=web --omit-default-module-path ../target/wasm32-unknown-unknown/release/subzero_wasm.wasm
        #   wasm-bindgen --out-dir=pkg-node --target=nodejs --omit-default-module-path ../target/wasm32-unknown-unknown/release/subzero_wasm.wasm
        #   wasm-bindgen --out-dir=pkg-deno --target=deno --omit-default-module-path ../target/wasm32-unknown-unknown/release/subzero_wasm.wasm

      # note, this has to be after building wasm
      - name: Build subzero-node
        working-directory: subzero-node
        run: |
          npm ci
          npm run lint
          npm run build

      - name: Set package version as env var
        working-directory: subzero-node
        run: |
          echo "PACKAGE_VERSION=${VERSION_TAG/v/}" >> $GITHUB_ENV
          echo "PACKAGE_VERSION: $PACKAGE_VERSION"
      
      - name: Pack web package
        working-directory: subzero-node/dist-web
        run: npm pack

      - name: Pack nodejs package
        working-directory: subzero-node/dist-nodejs
        run: npm pack

      - name: Pack deno package
        working-directory: subzero-node/dist-deno
        run: npm pack

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: npm-package-${{ env.VERSION_TAG }}
          path: |
            subzero-node/dist-web/subzerocloud-web-${{ env.PACKAGE_VERSION }}.tgz
            subzero-node/dist-nodejs/subzerocloud-nodejs-${{ env.PACKAGE_VERSION }}.tgz
            subzero-node/dist-deno/subzerocloud-deno-${{ env.PACKAGE_VERSION }}.tgz
      
      - run: sccache --show-stats

  build-executable:
    name: build ${{ matrix.arch }}
    strategy:
      matrix:
        include:
          # - arch: x86_64-apple-darwin
          #   os: macos-latest
          #   file: subzero-${{ github.ref_name }}.darwin-amd64
          # - arch: aarch64-apple-darwin
          #   os: macos-latest
          #   file: subzero-${{ github.ref_name }}.darwin-arm64
          - arch: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            file: subzero-${{ github.ref_name }}.linux-amd64
          # - arch: aarch64-unknown-linux-gnu
          #   os: ubuntu-latest
          #   file: subzero-${{ github.ref_name }}.linux-arm64
          # - arch: x86_64-pc-windows-msvc
          #   os: windows-latest
          #   file: subzero-${{ github.ref_name }}.windows-amd64
    runs-on: ${{ matrix.os }}
    steps:
      # check that the workflow was triggered by a tag
      - name: Check that the workflow was triggered by a tag
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo "This workflow was not triggered by a tag. Exiting."
          exit 1
      - uses: actions/checkout@v2

      # - uses: ./.github/actions/rustup
      #   with:
      #     version: ${{ env.RUST_TOOLCHAIN }}

      - uses: ./.github/actions/cargo-cache
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          target: ${{ matrix.arch }}
      - name: Output package versions
        run: cargo version ; rustc --version

      
      # - name: Install node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ env.NODE_VERSION }}

      # - name: Build executable
      #   run: cargo build --package subzero-rocket --release

      - name: Run cargo build
        run: cargo build --package subzero-rocket --release --target ${{ matrix.arch }}

      # - name: Build wasm
      #   working-directory: subzero-wasm
      #   run: wasm-pack build --release --target nodejs

      # # note, this has to be after building wasm
      # - name: Build node
      #   working-directory: subzero-node
      #   run: |
      #     npm ci
      #     npm pack

      - name: Package binaries
        if: ${{ !contains(matrix.arch, 'windows') }}
        run: |
          cd target/${{ matrix.arch }}/release
          chmod +x subzero
          tar -zcvf ${{ matrix.file }}.tgz subzero
          echo $(shasum -a 256 ${{ matrix.file }}.tgz | cut -f1 -d' ') > ${{ matrix.file }}.txt
          cd -

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.file }}
          path: |
            target/${{ matrix.arch }}/release/subzero
            target/${{ matrix.arch }}/release/${{ matrix.file }}.tgz
            target/${{ matrix.arch }}/release/${{ matrix.file }}.txt

      - run: sccache --show-stats

  docker:
    name: Docker build and push
    needs: [build-executable]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Download amd64 binary
        uses: actions/download-artifact@v3
        with:
          name: subzero-${{ github.ref_name }}.linux-amd64
          path: .github/docker/amd64

      # - name: Download arm64 binary
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: subzero-${{ github.ref_name }}.linux-arm64
      #     path: .github/docker/arm64

      - name: Set file permissions
        working-directory: .github/docker
        run: |
          # chmod +x amd64/subzero arm64/subzero
          chmod +x amd64/subzero

      - name: Configure DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure tag
        run: |
          VERSION=${{ github.ref_name }}
          echo "VERSION=${VERSION:1}" >> $GITHUB_ENV

      - name: Copy files to build context
        working-directory: .github/docker
        run: |
          cp -R ../../introspection introspection

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          context: .github/docker
          push: true
          #platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          # outputs: type=docker,dest=docker-${{ github.ref_name }}.tar
          tags: subzerocloud/subzero:latest,subzerocloud/subzero:${{ env.VERSION_TAG }}

      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: docker-${{ github.ref_name }}
      #     path: |
      #       docker-${{ github.ref_name }}.tar
  
  gh-release:
    name: Github Release
    needs: [build-node, build-executable]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          name: "Release ${{ github.ref_name }}"
          files: |
            LICENSE.txt
            **/*.tgz
  
  npm-release:
    name: NPM Release
    needs: [build-node]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: npm-package-${{ env.VERSION_TAG }}
          path: .
      
      - run: ls -la

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Set package version as env var
        run: |
          echo "PACKAGE_VERSION=${VERSION_TAG/v/}" >> $GITHUB_ENV
          echo "PACKAGE_VERSION: $PACKAGE_VERSION"

      - name: Publish web npm packages
        working-directory: dist-web
        run: |
          npm publish subzerocloud-web-${{ env.PACKAGE_VERSION }}.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Publish nodejs npm packages
        working-directory: dist-nodejs
        run: |
          npm publish subzerocloud-nodejs-${{ env.PACKAGE_VERSION }}.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish deno npm packages
        working-directory: dist-deno
        run: |
          npm publish subzerocloud-deno-${{ env.PACKAGE_VERSION }}.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}