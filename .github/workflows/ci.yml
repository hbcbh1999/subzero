name: ci

on:
    push:
        branches:
            - main
defaults:
    run:
        shell: bash

env:
    RUST_BACKTRACE: 1
    CARGO_NET_GIT_FETCH_WITH_CLI: "true"
    SCCACHE_CACHE_SIZE: 2G
    RUSTC_WRAPPER: sccache
    # SCCACHE_DIR: ${{ github.workspace }}/.sccache
    SCCACHE_BUCKET: subzero-sccache
    RUST_TOOLCHAIN: nightly
    NODE_VERSION: 18
    POSTGRES_USER: postgrest_test_authenticator
    POSTGRES_PASSWORD: pass
    POSTGRES_DB: app
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_REGION: us-east-1
    
jobs:
    build-test:
        name: build-test
        runs-on: ubuntu-latest
        steps:
            - name: "Set environmental variables"
              run: |
                echo "POSTGRESQL_DB_URI=postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/$POSTGRES_DB" >> $GITHUB_ENV

            - uses: actions/checkout@v2
              if: ${{ !env.ACT }}

            - name: Bring up db services
              run: docker-compose --file .github/docker-compose.yml up -d

            - name: Update Rust
              run: |
                rustup update --no-self-update ${{ env.RUST_TOOLCHAIN }}
                rustup default ${{ env.RUST_TOOLCHAIN }}
            
            - uses: actions/setup-node@v3
              with:
                node-version:  ${{ env.NODE_VERSION }}

            - name: Install Dependencies
              run: |
                sudo apt-key adv --refresh-keys --keyserver keyserver.ubuntu.com
                sudo apt-get update
                sudo apt-get install --yes sqlite3
                curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

            - run: cargo fmt --all -- --check

            - uses: ./.github/actions/cargo-cache

            - run: cargo build

            - run: wasm-pack build --target nodejs
              working-directory: subzero-wasm

            - run: npm ci
              working-directory: subzero-node

            # - run: cargo test sqlite
            # - run: cargo test postgresql -- --test-threads=1

            - run: npm test
              working-directory: subzero-node

            - run: sccache --show-stats
            
            - name: Bring down db services
              run: docker-compose --file .github/docker-compose.yml down
